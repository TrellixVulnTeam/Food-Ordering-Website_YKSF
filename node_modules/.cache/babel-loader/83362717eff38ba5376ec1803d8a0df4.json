{"ast":null,"code":"import api from \"../api\";\nexport const fetchFaq = tag => async dispatch => {\n  const response = await api.get(`/mini-project/faq.json`);\n  console.log(response.data[\"Our food\"].queries, \"action\");\n  dispatch({\n    type: 'FETCH_FAQ',\n    payload: response.data[`Our ${tag}`].queries\n  });\n};\nexport const fetchMenu = category => async dispatch => {\n  const response = await api.get('/mini-project/menu.json');\n  const res = response.data[\"menu-items\"].filter(item => {\n    return item.category.includes(category);\n  });\n  const data = res.map(val => ({ ...val,\n    quantity: 1\n  }));\n  console.log(response, \"llllllllll\");\n  dispatch({\n    type: 'FETCH_MENU',\n    payload: data\n  });\n}; // export const fetchFullMenu = () => async dispatch => {\n//     const response = await api.get('/mini-project/menu.json');\n//     console.log(response.data[\"menu-items\"], \"fm\");\n//         dispatch({\n//             type: 'FETCH_FULL_MENU',\n//             payload: response.data[\"menu-items\"]\n//         });\n// };\n\nexport const fetchCart = cartItems => dispatch => {\n  console.log(cartItems, \"result\");\n  dispatch({\n    type: 'CART_ADD',\n    payload: cartItems\n  });\n};\nexport const fetchCartAfterRemove = item => dispatch => {\n  // console.log(cartItems, \"result\");\n  dispatch({\n    type: 'CART_REMOVE',\n    payload: item\n  });\n};\nexport const fetchPayment = items => dispatch => {\n  console.log(items, \"payment\");\n  const arr2 = [[{\n    hi: \"k\"\n  }], [{\n    byy: \"k\"\n  }]];\n  console.log(JSON.stringify(arr2));\n  const arr = [...items];\n  let pay = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    pay += Number(arr[i].price) * Number(arr[i].quantity);\n  }\n\n  dispatch({\n    type: 'PAYMENT',\n    payload: pay\n  });\n};","map":{"version":3,"sources":["/home/dheerendra/Desktop/assignment-dheerendra/assignments/foodie/src/action/index.js"],"names":["api","fetchFaq","tag","dispatch","response","get","console","log","data","queries","type","payload","fetchMenu","category","res","filter","item","includes","map","val","quantity","fetchCart","cartItems","fetchCartAfterRemove","fetchPayment","items","arr2","hi","byy","JSON","stringify","arr","pay","i","length","Number","price"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS,MAAMC,QAAN,IAAkB;AAC/C,QAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAS,wBAAT,CAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAc,UAAd,EAA0BC,OAAtC,EAA+C,QAA/C;AAEAN,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,OAAO,EAAEP,QAAQ,CAACI,IAAT,CAAe,OAAMN,GAAI,EAAzB,EAA4BO;AAFhC,GAAD,CAAR;AAIH,CATM;AAWP,OAAO,MAAMG,SAAS,GAAIC,QAAD,IAAc,MAAMV,QAAN,IAAkB;AACrD,QAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQ,yBAAR,CAAvB;AAGA,QAAMS,GAAG,GAAGV,QAAQ,CAACI,IAAT,CAAc,YAAd,EAA4BO,MAA5B,CAAoCC,IAAD,IAAU;AACrD,WAAOA,IAAI,CAACH,QAAL,CAAcI,QAAd,CAAuBJ,QAAvB,CAAP;AACH,GAFW,CAAZ;AAIA,QAAML,IAAI,GAAGM,GAAG,CAACI,GAAJ,CAAQC,GAAG,KAAK,EAAE,GAAGA,GAAL;AAAUC,IAAAA,QAAQ,EAAE;AAApB,GAAL,CAAX,CAAb;AAEAd,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,YAAtB;AAEAD,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,YADD;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAKH,CAjBM,C,CAoBP;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMa,SAAS,GAAIC,SAAD,IAAenB,QAAQ,IAAI;AAEhDG,EAAAA,OAAO,CAACC,GAAR,CAAYe,SAAZ,EAAuB,QAAvB;AAEAnB,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,OAAO,EAAEW;AAFJ,GAAD,CAAR;AAIH,CARM;AAUP,OAAO,MAAMC,oBAAoB,GAAIP,IAAD,IAAUb,QAAQ,IAAI;AAEtD;AAEAA,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEK;AAFJ,GAAD,CAAR;AAIH,CARM;AAWP,OAAO,MAAMQ,YAAY,GAAIC,KAAD,IAAWtB,QAAQ,IAAI;AAE/CG,EAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ,EAAmB,SAAnB;AAEA,QAAMC,IAAI,GAAG,CAAC,CAAC;AAACC,IAAAA,EAAE,EAAC;AAAJ,GAAD,CAAD,EAAY,CAAC;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAD,CAAZ,CAAb;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAYsB,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;AAEA,QAAMK,GAAG,GAAG,CAAC,GAAGN,KAAJ,CAAZ;AACA,MAAIO,GAAG,GAAG,CAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,GAAG,IAAIG,MAAM,CAACJ,GAAG,CAACE,CAAD,CAAH,CAAOG,KAAR,CAAN,GAAuBD,MAAM,CAACJ,GAAG,CAACE,CAAD,CAAH,CAAOb,QAAR,CAApC;AACH;;AAEDjB,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEqB;AAFJ,GAAD,CAAR;AAIH,CAlBM","sourcesContent":["import api from \"../api\";\n\nexport const fetchFaq = (tag) => async dispatch => {\n    const response = await api.get(`/mini-project/faq.json`);\n\n    console.log(response.data[\"Our food\"].queries, \"action\");\n\n    dispatch({\n        type: 'FETCH_FAQ',\n        payload: response.data[`Our ${tag}`].queries\n    });\n};\n\nexport const fetchMenu = (category) => async dispatch => {\n    const response = await api.get('/mini-project/menu.json');\n\n\n    const res = response.data[\"menu-items\"].filter((item) => {\n        return item.category.includes(category)\n    });\n\n    const data = res.map(val => ({ ...val, quantity: 1 }));\n\n    console.log(response, \"llllllllll\");\n\n    dispatch({\n        type: 'FETCH_MENU',\n        payload: data\n    });\n\n};\n\n\n// export const fetchFullMenu = () => async dispatch => {\n//     const response = await api.get('/mini-project/menu.json');\n\n//     console.log(response.data[\"menu-items\"], \"fm\");\n\n//         dispatch({\n//             type: 'FETCH_FULL_MENU',\n//             payload: response.data[\"menu-items\"]\n//         });\n// };\n\n\nexport const fetchCart = (cartItems) => dispatch => {\n\n    console.log(cartItems, \"result\");\n\n    dispatch({\n        type: 'CART_ADD',\n        payload: cartItems\n    });\n};\n\nexport const fetchCartAfterRemove = (item) => dispatch => {\n\n    // console.log(cartItems, \"result\");\n\n    dispatch({\n        type: 'CART_REMOVE',\n        payload: item\n    });\n};\n\n\nexport const fetchPayment = (items) => dispatch => {\n\n    console.log(items, \"payment\");\n\n    const arr2 = [[{hi:\"k\"}],[{byy:\"k\"}]];\n    console.log(JSON.stringify(arr2));\n\n    const arr = [...items];\n    let pay = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        pay += Number(arr[i].price) * Number(arr[i].quantity);\n    }\n\n    dispatch({\n        type: 'PAYMENT',\n        payload: pay\n    });\n};"]},"metadata":{},"sourceType":"module"}