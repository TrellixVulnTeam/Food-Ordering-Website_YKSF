{"ast":null,"code":"var _jsxFileName = \"/home/dheerendra/Desktop/assignment-dheerendra/assignments/foodie/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { Link } from 'react-router-dom';\n\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport '../style/Menu.scss';\nimport Cart from '../components/Cart';\nimport { fetchCart } from '../action';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    bottom: 'auto',\n    transform: 'translate(170%, 0%)'\n  }\n};\nModal.setAppElement('#modal');\n\nconst Menu = props => {\n  _s();\n\n  const [renderMenu, setRenderMenu] = useState(props.menu);\n  const [show, setShow] = useState(false);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  let subtitle;\n  useEffect(() => {\n    setRenderMenu(props.menu);\n  }, [props.menu]);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function addItemToCart(e) {\n    openModal();\n    console.log(e.target.value);\n  }\n\n  function clickIngredient(value) {\n    props.fetchCart(value);\n    openModal();\n    let val = value;\n    console.log(val);\n  }\n\n  const update = (mName, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const arr = [...renderMenu];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].name === mName) {\n        arr[i].quantity = value;\n      }\n    }\n\n    setRenderMenu(arr);\n  };\n\n  console.log(props.menu, \"myprop\");\n  console.log(renderMenu, \"render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menus\",\n      children: [renderMenu ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: renderMenu.map((menu, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: menu.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nameAndPrice\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: menu.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"$ \", menu.price, \" USD\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: menu.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: 'number',\n                  name: `quantityInput${index}`,\n                  value: menu.quantity,\n                  onChange: e => update(menu.name, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: clickIngredient.bind(this, {\n                    name: menu.name,\n                    price: menu.price,\n                    image: menu.image,\n                    quantity: quantity\n                  }),\n                  children: \"Add to Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShow(true),\n                  children: \"Add to cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Cart, {\n                  show: show\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"modal\",\n        isOpen: modalIsOpen // onAfterOpen={afterOpenModal}\n        ,\n        onRequestClose: closeModal,\n        style: customStyles,\n        backdropOpacity: 0.3,\n        contentLabel: \"Example Modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Your Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: props.cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: \"Item Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-desc\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"name\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"price\",\n                    children: [\"$ \", item.price, \" USD\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"remove\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"SubTotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkout\",\n              children: \"Chechout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"5d1/CoikSl9lpz8fM7KL3yeymVk=\");\n\n_c = Menu;\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchCart\n})(Menu);\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/dheerendra/Desktop/assignment-dheerendra/assignments/foodie/src/components/Menu.js"],"names":["React","useEffect","useState","Modal","Link","Cart","fetchCart","connect","customStyles","content","top","bottom","transform","setAppElement","Menu","props","renderMenu","setRenderMenu","menu","show","setShow","modalIsOpen","setIsOpen","quantity","setQuantity","subtitle","openModal","afterOpenModal","style","color","closeModal","addItemToCart","e","console","log","target","value","clickIngredient","val","update","mName","name","arr","i","length","map","index","image","price","description","bind","cart","item","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport '../style/Menu.scss';\nimport Cart from '../components/Cart';\nimport { fetchCart } from '../action';\nimport { connect } from 'react-redux';\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        bottom: 'auto',\n        transform: 'translate(170%, 0%)',\n    },\n};\n\nModal.setAppElement('#modal');\n\nconst Menu = (props) => {\n\n   const [renderMenu, setRenderMenu] = useState(props.menu);\n\n   const [show, setShow] = useState(false);\n    \n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [quantity, setQuantity] = useState(1);\n    let subtitle;\n\n\n    useEffect(() => {\n        setRenderMenu(props.menu);\n    },[props.menu]);\n\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function afterOpenModal() {\n        subtitle.style.color = '#f00';\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    function addItemToCart(e) {\n        openModal();\n        console.log(e.target.value);\n    }\n\n    function clickIngredient(value) {\n        props.fetchCart(value);\n        openModal();\n        let val = value;\n        console.log(val);\n    }\n\n    \n\n    const update = (mName,e) => {\n        const {name, value} = e.target;\n        \n        const arr = [...renderMenu];\n        for(let i=0;i<arr.length;i++) {\n            if(arr[i].name === mName) {\n                arr[i].quantity = value;\n            }\n        }\n        setRenderMenu(arr);\n    };\n\n\n    console.log(props.menu, \"myprop\");\n    console.log(renderMenu, \"render\");\n\n    return (\n        <div className=\"menu\">\n            <div className=\"menus\">\n                {\n                    renderMenu ?\n                        <>{\n                            renderMenu.map((menu,index) => (\n                                <div className=\"item\" key={index}>\n                                    <div className=\"menu-item\">\n                                        <img src={menu.image}></img>\n                                        <div className=\"menu-content\">\n                                            <div className=\"nameAndPrice\">\n                                                <h6>{menu.name}</h6>\n                                                <div>$ {menu.price} USD</div>\n                                            </div>\n                                            <p>{menu.description}</p>\n                                            <div className=\"add\">\n                                                <input type={'number'} name={`quantityInput${index}`} value={menu.quantity} onChange={(e) => update(menu.name,e)} ></input>\n                                                <button onClick={clickIngredient.bind(this, { name: menu.name, price: menu.price, image: menu.image, quantity : quantity})}>Add to Cart</button>\n                                                <button onClick={() => setShow(true)}>Add to cart</button>\n                                                <Cart show={show}/>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                        </> :\n                        <>\n                            {\n                                <div></div>\n                            }\n                        </>\n                }\n\n\n                <Modal className=\"modal\"\n                    isOpen={modalIsOpen}\n                    // onAfterOpen={afterOpenModal}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    backdropOpacity={0.3}\n                    contentLabel=\"Example Modal\"\n                >\n                    <div className=\"modal-config\">\n                        <div className=\"modal-header\">\n                            <h1>Your Order</h1>\n                            <button onClick={closeModal}>X</button>\n                        </div>\n                        <hr />\n                        <div className=\"modal-content\">\n                            {\n                                props.cart.map((item) => (\n                                    <div className=\"item\">\n                                        <img src={item.image} alt=\"Item Image\"></img>\n                                        <div className=\"item-desc\">\n                                            <div>\n                                                <div className=\"name\">{item.name}</div>\n                                                <div className=\"price\">$ {item.price} USD</div>\n                                                <div className=\"remove\">Remove</div>\n                                            </div>\n                                            <input></input>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                        <div className=\"modal-footer\">\n                            <hr />\n                            <div className=\"amount\">\n                                <h3>SubTotal</h3>\n                                <div>Total</div>\n                            </div>\n                            <div className=\"checkout\">Chechout</div>\n\n                        </div>\n                    </div>\n                </Modal>\n\n            </div>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return { cart: state.cart }\n};\n\nexport default connect(mapStateToProps, { fetchCart })(Menu);"]},"metadata":{},"sourceType":"module"}